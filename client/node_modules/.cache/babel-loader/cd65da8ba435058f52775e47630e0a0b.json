{"ast":null,"code":"var _jsxFileName = \"/Users/adhe/fabric/client/src/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { isInputEvent, setNestedObjectValues, useFormik } from 'formik';\nimport axios from 'axios'; // import { AuthContext } from '../../store/authContext'\n// import { Redirect} from 'react-router-dom'\n\nimport { login, logout } from './actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [error, setError] = useState();\n  const [user, setUser] = useState(false);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: async ({\n      username,\n      password\n    }) => {\n      try {\n        const res = await axios.post(`${API_URL}/login`, {\n          username: username,\n          password: password\n        });\n        dispatch(login('user', 'sdf', true)); // localStorage.setItem('token', res.headers.authorization)\n      } catch (error) {// return {failed: true, error: error.message, reason: 'user doesnt exist'}\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alpha signin-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Fabric Risk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), true ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"space\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        name: \"username\",\n        type: \"username\",\n        onChange: formik.handleChange,\n        value: formik.values.username,\n        placeholder: \"Username or Email\",\n        className: \"Input-text-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        value: formik.values.password,\n        placeholder: \"Password\",\n        className: \"Input-text-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn2 btn-light btn-lsm\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) // : <Redirect to=\"/\" />\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; // const mg = {\n\n\n_s(Login, \"ejXyOtPM6yP5eaTEz4b6AYukHyg=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adhe/fabric/client/src/login.js"],"names":["React","useState","useContext","useEffect","isInputEvent","setNestedObjectValues","useFormik","axios","login","logout","useSelector","useDispatch","Login","error","setError","user","setUser","dispatch","formik","initialValues","username","password","onSubmit","res","post","API_URL","handleSubmit","handleChange","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,UAA3B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,YAAT,EAAuBC,qBAAvB,EAA8CC,SAA9C,QAA+D,QAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,WAA7B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMgB,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,MAAM,GAAGZ,SAAS,CAAC;AACvBa,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE,EADG;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADQ;AAKvBC,IAAAA,QAAQ,EAAE,OAAO;AAACF,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAP,KAAgC;AACxC,UAAI;AACF,cAAME,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAY,GAAEC,OAAQ,QAAtB,EAA+B;AAC/CL,UAAAA,QAAQ,EAAEA,QADqC;AAE/CC,UAAAA,QAAQ,EAAEA;AAFqC,SAA/B,CAAlB;AAIAJ,QAAAA,QAAQ,CAACT,KAAK,CAAC,MAAD,EAAS,KAAT,EAAgB,IAAhB,CAAN,CAAR,CALE,CAOF;AACD,OARD,CAQE,OAAOK,KAAP,EAAc,CACd;AACD;AACF;AAjBsB,GAAD,CAAxB;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,oBACC;AAAM,MAAA,QAAQ,EAAEK,MAAM,CAACQ,YAAvB;AAAsC,MAAA,SAAS,EAAC,OAAhD;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAER,MAAM,CAACS,YAJnB;AAKE,QAAA,KAAK,EAAET,MAAM,CAACU,MAAP,CAAcR,QALvB;AAME,QAAA,WAAW,EAAC,mBANd;AAOE,QAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAEF,MAAM,CAACS,YAJnB;AAKE,QAAA,KAAK,EAAET,MAAM,CAACU,MAAP,CAAcP,QALvB;AAME,QAAA,WAAW,EAAC,UANd;AAOE,QAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,cAXF,eAoBE;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAwBC;AAAA;AAAA;AAAA;AAAA,YA1BJ,CA2BE;AA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA1DD,C,CA4DA;;;GA5DMT,K;UAIaD,W,EAEFL,S;;;KANXM,K;AA+DN,eAAeA,KAAf","sourcesContent":["import React, { useState,  useContext, useEffect } from 'react'\nimport { isInputEvent, setNestedObjectValues, useFormik } from 'formik'\nimport axios from 'axios'\n// import { AuthContext } from '../../store/authContext'\n// import { Redirect} from 'react-router-dom'\nimport { login, logout} from './actions'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst Login = () => {\n  const [error, setError] = useState()\n  const [user, setUser]   = useState(false)\n\n  const dispatch = useDispatch()\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    onSubmit: async ({username, password}) => {\n      try { \n        const res = await axios.post(`${API_URL}/login`, {\n          username: username,\n          password: password\n        })\n        dispatch(login('user', 'sdf', true))\n        \n        // localStorage.setItem('token', res.headers.authorization)\n      } catch (error) {\n        // return {failed: true, error: error.message, reason: 'user doesnt exist'}\n      }\n    },\n  });\n\n  return (\n    <div className=\"alpha signin-form\">\n      <h1>Welcome Fabric Risk</h1>\n      {true ?\n        <form onSubmit={formik.handleSubmit}  className=\"space\">\n          <input\n            id=\"username\"\n            name=\"username\"\n            type=\"username\"\n            onChange={formik.handleChange}\n            value={formik.values.username}\n            placeholder=\"Username or Email\"\n            className=\"Input-text-search\"\n          />\n          <br/>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            placeholder=\"Password\"\n            className=\"Input-text-search\"\n          />\n          <br/>\n          <button type=\"submit\" className=\"btn2 btn-light btn-lsm\">Login</button>\n        </form>\n      : <div></div>\n      // : <Redirect to=\"/\" />\n      }\n    </div>\n  );\n}\n\n// const mg = {\n  \n\nexport default Login;"]},"metadata":{},"sourceType":"module"}