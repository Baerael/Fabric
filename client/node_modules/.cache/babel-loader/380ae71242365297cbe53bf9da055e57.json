{"ast":null,"code":"var _jsxFileName = \"/Users/adhe/fabric/client/src/store/use-auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/api\";\nconst authContext = /*#__PURE__*/createContext();\nexport function ProvideAuth({\n  children\n}) {\n  _s();\n\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [user, setUser] = useState('');\n  const [auth, isAuth] = useState(false);\n\n  const login = async (username, password) => {\n    try {\n      const res = await axios.post(`${API_URL}/login`, {\n        username: username,\n        password: password\n      });\n      setIsError(false);\n      setMessage(res.data.success);\n      setUser(res.data.username);\n      isAuth(true);\n    } catch (error) {\n      console.error(error);\n      setIsError(true);\n      isAuth(false);\n      setMessage('user doesnt exist');\n      setUser('');\n    }\n  };\n\n  const logout = async () => {\n    setIsError(false);\n    isAuth(false);\n    setMessage('');\n    setUser('');\n  };\n\n  const isLoggedin = () => {\n    return auth;\n  };\n\n  const getUser = () => {\n    return user;\n  };\n\n  return {\n    isLoggedin,\n    getUser,\n    login,\n    logout\n  };\n}\n\n_s3(useProvideAuth, \"R9f1iW1Q7znZh5+pWQ2ZlCpI25c=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["/Users/adhe/fabric/client/src/store/use-auth.js"],"names":["React","useState","useEffect","useContext","createContext","axios","API_URL","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","isError","setIsError","message","setMessage","user","setUser","isAuth","login","username","password","res","post","data","success","error","console","logout","isLoggedin","getUser"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,2BAAhB;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,SAASI,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AACzC,QAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,IAA7B;AAAA,cAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAHeD,W;UACFG,c;;;KADEH,W;AAMhB,OAAO,MAAMI,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOT,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;;IAAMK,O;;AAKb,SAASD,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACE,OAAD,EAAUC,UAAV,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,IAAD,EAAOS,MAAP,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMmB,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC1C,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAY,GAAElB,OAAQ,QAAtB,EAA+B;AAC/Ce,QAAAA,QAAQ,EAAEA,QADqC;AAE/CC,QAAAA,QAAQ,EAAEA;AAFqC,OAA/B,CAAlB;AAKAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAACO,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAV;AACAR,MAAAA,OAAO,CAACK,GAAG,CAACE,IAAJ,CAASJ,QAAV,CAAP;AACAF,MAAAA,MAAM,CAAC,IAAD,CAAN;AACD,KAVD,CAUE,OAAOQ,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAb,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,MAAAA,MAAM,CAAC,KAAD,CAAN;AACAH,MAAAA,UAAU,CAAC,mBAAD,CAAV;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAlBD;;AAoBA,QAAMW,MAAM,GAAG,YAAY;AACvBf,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,IAAAA,MAAM,CAAC,KAAD,CAAN;AACAH,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GALD;;AAOA,QAAMY,UAAU,GAAI,MAAM;AAAE,WAAOpB,IAAP;AAAa,GAAzC;;AACA,QAAMqB,OAAO,GAAO,MAAM;AAAE,WAAOd,IAAP;AAAa,GAAzC;;AAGA,SAAO;AACLa,IAAAA,UADK;AAELC,IAAAA,OAFK;AAGLX,IAAAA,KAHK;AAILS,IAAAA;AAJK,GAAP;AAMD;;IA3CQlB,c","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from 'axios'\n\nconst API_URL = \"http://localhost:8080/api\"\n\nconst authContext = createContext();\n\nexport function ProvideAuth({ children }) {\n\tconst auth = useProvideAuth();\n\treturn <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n\nexport const useAuth = () => { \n  return useContext(authContext); \n};\n\n\nfunction useProvideAuth() {\n  const [isError, setIsError]   = useState(false)\n  const [message, setMessage]   = useState(false)\n  const [user, setUser]         = useState('')\n  const [auth, isAuth]          = useState(false)\n\n  const login = async (username, password) => {\n    try { \n      const res = await axios.post(`${API_URL}/login`, {\n        username: username,\n        password: password\n      })\n\n      setIsError(false)\n      setMessage(res.data.success)\n      setUser(res.data.username)\n      isAuth(true)\n    } catch (error) {\n      console.error(error)\n      setIsError(true)\n      isAuth(false)\n      setMessage('user doesnt exist')\n      setUser('')\n    }\n  };\n\n  const logout = async () => {\n      setIsError(false)\n      isAuth(false)\n      setMessage('')\n      setUser('')\n  };\n\n  const isLoggedin  = () => { return auth }\n  const getUser     = () => { return user }\n\n\n  return { \n    isLoggedin,\n    getUser,\n    login,\n    logout,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}