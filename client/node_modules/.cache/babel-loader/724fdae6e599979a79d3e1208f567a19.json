{"ast":null,"code":"var _jsxFileName = \"/Users/adhe/fabric/client/src/store/use-auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/api\";\nconst authContext = /*#__PURE__*/createContext();\nexport function ProvideAuth({\n  children\n}) {\n  _s();\n\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  // const [isError, setIsError]   = useState(false)\n  // const [message, setMessage]   = useState(false)\n  // const [loggedIn, setLoggedIn] = useState(false)\n  // const [user, setUser]         = useState('')\n  // const [password, setPassword] = useState('')\n  // const [auth, isAuth]          = useState(false)\n  const u = {\n    username: '',\n    password: '',\n    isLoggedin: false,\n    isError: false\n  };\n\n  const login = async (username, password) => {\n    try {\n      const res = await axios.post(`${API_URL}/login`, {\n        username: username,\n        password: password\n      });\n      u = {\n        username: res.data.username,\n        password: res.data.password\n      }; // u.username = res.data.username\n      // u.password = res.data.password\n      // u.isLoggedin = true\n      // u.message = res.data.success\n    } catch (error) {\n      console.error(error); // u = {\n      // }\n\n      u.username = '';\n      u.password = '';\n      u.isLoggedin = false; // u.message = res.data.success\n      // setIsError(true)\n      // isAuth(false)\n      // setMessage('user doesnt exist')\n      // setUser('')\n    }\n  };\n\n  const logout = async () => {// setIsError(false)\n    // isAuth(false)\n    // setMessage('')\n    // setUser('')\n  };\n\n  const isLoggedin = () => {\n    return u.isLoggedin;\n  };\n\n  const getPassword = () => {\n    return u.password;\n  };\n\n  const getUser = () => {\n    return u.username;\n  };\n\n  return {\n    isLoggedin,\n    login,\n    logout,\n    getUser,\n    getPassword\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["/Users/adhe/fabric/client/src/store/use-auth.js"],"names":["React","useState","useEffect","useContext","createContext","axios","API_URL","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","u","username","password","isLoggedin","isError","login","res","post","data","error","console","logout","getPassword","getUser"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,2BAAhB;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,SAASI,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AACzC,QAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,IAA7B;AAAA,cAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAHeD,W;UACFG,c;;;KADEH,W;AAMhB,OAAO,MAAMI,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOT,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;;IAAMK,O;;AAKb,SAASD,cAAT,GAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AAEA,QAAME,CAAC,GAAG;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,UAAU,EAAE,KAHJ;AAIRC,IAAAA,OAAO,EAAE;AAJD,GAAV;;AAOA,QAAMC,KAAK,GAAG,OAAOJ,QAAP,EAAiBC,QAAjB,KAA8B;AAC1C,QAAI;AACF,YAAMI,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAEd,OAAQ,QAAtB,EAA+B;AAC/CQ,QAAAA,QAAQ,EAAEA,QADqC;AAE/CC,QAAAA,QAAQ,EAAEA;AAFqC,OAA/B,CAAlB;AAKAF,MAAAA,CAAC,GAAG;AACFC,QAAAA,QAAQ,EAAEK,GAAG,CAACE,IAAJ,CAASP,QADjB;AAEFC,QAAAA,QAAQ,EAAEI,GAAG,CAACE,IAAJ,CAASN;AAFjB,OAAJ,CANE,CAWF;AACA;AACA;AACA;AAED,KAhBD,CAgBE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd,EADc,CAGd;AAEA;;AACAT,MAAAA,CAAC,CAACC,QAAF,GAAa,EAAb;AACAD,MAAAA,CAAC,CAACE,QAAF,GAAa,EAAb;AACAF,MAAAA,CAAC,CAACG,UAAF,GAAe,KAAf,CARc,CASd;AAEA;AACA;AACA;AACA;AACD;AACF,GAjCD;;AAmCA,QAAMQ,MAAM,GAAG,YAAY,CACvB;AACA;AACA;AACA;AACH,GALD;;AAOA,QAAMR,UAAU,GAAI,MAAM;AAAE,WAAOH,CAAC,CAACG,UAAT;AAAqB,GAAjD;;AACA,QAAMS,WAAW,GAAG,MAAM;AAAE,WAAOZ,CAAC,CAACE,QAAT;AAAmB,GAA/C;;AACA,QAAMW,OAAO,GAAO,MAAM;AAAE,WAAOb,CAAC,CAACC,QAAT;AAAmB,GAA/C;;AAGA,SAAO;AACLE,IAAAA,UADK;AAELE,IAAAA,KAFK;AAGLM,IAAAA,MAHK;AAILE,IAAAA,OAJK;AAKLD,IAAAA;AALK,GAAP;AAOD","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from 'axios'\n\nconst API_URL = \"http://localhost:8080/api\"\n\nconst authContext = createContext();\n\nexport function ProvideAuth({ children }) {\n\tconst auth = useProvideAuth();\n\treturn <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n\nexport const useAuth = () => { \n  return useContext(authContext); \n};\n\n\nfunction useProvideAuth() {\n  // const [isError, setIsError]   = useState(false)\n  // const [message, setMessage]   = useState(false)\n  // const [loggedIn, setLoggedIn] = useState(false)\n  // const [user, setUser]         = useState('')\n  // const [password, setPassword] = useState('')\n  // const [auth, isAuth]          = useState(false)\n\n  const u = {\n    username: '',\n    password: '',\n    isLoggedin: false,\n    isError: false\n  }\n\n  const login = async (username, password) => {\n    try { \n      const res = await axios.post(`${API_URL}/login`, {\n        username: username,\n        password: password\n      })\n\n      u = {\n        username: res.data.username,\n        password: res.data.password\n      }\n\n      // u.username = res.data.username\n      // u.password = res.data.password\n      // u.isLoggedin = true\n      // u.message = res.data.success\n\n    } catch (error) {\n      console.error(error)\n\n      // u = {\n\n      // }\n      u.username = ''\n      u.password = ''\n      u.isLoggedin = false\n      // u.message = res.data.success\n\n      // setIsError(true)\n      // isAuth(false)\n      // setMessage('user doesnt exist')\n      // setUser('')\n    }\n  };\n\n  const logout = async () => {\n      // setIsError(false)\n      // isAuth(false)\n      // setMessage('')\n      // setUser('')\n  };\n\n  const isLoggedin  = () => { return u.isLoggedin }\n  const getPassword = () => { return u.password }\n  const getUser     = () => { return u.username }\n\n\n  return { \n    isLoggedin,\n    login,\n    logout,\n    getUser,\n    getPassword\n  }\n}\n"]},"metadata":{},"sourceType":"module"}