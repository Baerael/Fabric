{"ast":null,"code":"var _jsxFileName = \"/Users/adhe/fabric/client/src/use-auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = \"http://localhost:4000\";\nconst authContext = /*#__PURE__*/createContext();\nexport function ProvideAuth({\n  children\n}) {\n  _s();\n\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  const token = localStorage.getItem('token');\n  const [user, setUser] = useState({\n    email: '',\n    fullname: ''\n  });\n  const [nodes, setNodes] = useState([]);\n\n  const profile = async () => {\n    try {\n      const res = await axios.get(`${apiURL}/profile`, {\n        headers: {\n          authorization: token\n        }\n      });\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const signin = async (email, password) => {\n    try {\n      const res = await axios.post(`${apiURL}/signin`, {\n        email: email,\n        password: password\n      });\n      localStorage.setItem('token', res.headers.authorization);\n      setUser(email);\n    } catch (error) {\n      // handle error\n      console.error(error);\n    }\n  };\n\n  const signout = async () => {\n    try {\n      const res = await axios.post(`${apiURL}/signout`, {}, {\n        headers: {\n          authorization: token\n        }\n      });\n      localStorage.removeItem('token');\n      setUser(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const isAuth = () => {\n    return !!token;\n  };\n\n  const getToken = () => {\n    localStorage.getItem(token);\n  };\n\n  const setnode = async (deviceid, secret) => {\n    try {\n      const res = await axios.post(`${apiURL}/nodes`, {\n        deviceId: deviceid,\n        secret: secret\n      }, {\n        headers: {\n          authorization: token\n        }\n      });\n      console.log('setnode:', res);\n      return 'Successfully registered';\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getnodes = async () => {\n    try {\n      const res = await axios.get(`${apiURL}/nodes`, {\n        headers: {\n          authorization: token\n        }\n      });\n      return res.data.nodes;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(async () => {\n    if (!!token) {\n      try {\n        const data = await profile();\n        const nodeData = await getnodes();\n        setNodes(nodeData);\n        setUser({\n          email: data.email,\n          fullname: data.fullName\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, []);\n  return {\n    user,\n    signin,\n    signout,\n    profile,\n    isAuth,\n    getToken,\n    setnode,\n    getnodes,\n    nodes\n  };\n}\n\n_s3(useProvideAuth, \"PdOofNH5ucyER3AuR/GRAlERCRE=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["/Users/adhe/fabric/client/src/use-auth.js"],"names":["React","useState","useEffect","useContext","createContext","axios","apiURL","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","token","localStorage","getItem","user","setUser","email","fullname","nodes","setNodes","profile","res","get","headers","authorization","data","error","console","log","signin","password","post","setItem","signout","removeItem","isAuth","getToken","setnode","deviceid","secret","deviceId","getnodes","nodeData","fullName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from 'axios'\n\nconst apiURL = \"http://localhost:4000\"\n\nconst authContext = createContext();\n\nexport function ProvideAuth({ children }) {\n\tconst auth = useProvideAuth();\n\treturn <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n\nexport const useAuth = () => { \n  return useContext(authContext); \n};\n\n\nfunction useProvideAuth() {\n  const token = localStorage.getItem('token')\n  const [user, setUser] = useState({email: '', fullname: ''});\n  const [nodes, setNodes] = useState([]);\n\n  const profile = async () => {\n    try {\n      const res = await axios.get(`${apiURL}/profile`, {\n        headers: {\n          authorization: token\n        } \n      })\n\n      return res.data\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const signin = async (email, password) => {\n    try { \n      const res = await axios.post(`${apiURL}/signin`, {\n        email: email,\n        password: password\n      })\n\n      localStorage.setItem('token', res.headers.authorization)\n      setUser(email)\n    } catch (error) {\n      // handle error\n      console.error(error)\n    }\n  };\n\n  const signout = async () => {\n    try {\n      const res = await axios.post(`${apiURL}/signout`, {} , {\n        headers: {\n          authorization: token\n        } \n      })\n\n      localStorage.removeItem('token')\n      setUser(false)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const isAuth = () => {\n    return !!token\n  }\n\n  const getToken = () => { localStorage.getItem(token) }\n\n  const setnode = async (deviceid, secret) => {\n    try {\n      const res = await axios.post(`${apiURL}/nodes`, {\n          deviceId: deviceid,\n          secret: secret\n      } , {\n        headers: {\n          authorization: token,\n        } \n      })\n      \n      console.log('setnode:', res)\n      return 'Successfully registered'\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getnodes = async () => {\n    try {\n      const res = await axios.get(`${apiURL}/nodes`, {\n        headers: {\n          authorization: token,\n        } \n      })\n      \n      return res.data.nodes\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  useEffect(async () => {\n    if (!!token) {\n      try {\n        const data = await profile()\n        const nodeData = await getnodes()\n        \n        setNodes(nodeData)\n        setUser({\n          email: data.email,\n          fullname: data.fullName\n        })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }, []);\n\n  return { \n    user,\n    signin,\n    signout,\n    profile,\n    isAuth,\n    getToken,\n    setnode,\n    getnodes,\n    nodes\n  }\n}\n"]},"metadata":{},"sourceType":"module"}